{"version":3,"sources":["app/ModelClassifier.js","app/PredictionsListView.js","app/disclaimer/Disclaimer.js","app/App.js","reportWebVitals.js","index.js"],"names":["MODEL_CLASSES","ModelClassifier","model","tf","this","console","log","img","grayscale","fromPixels","resizeNearestNeighbor","mean","toFloat","expandDims","reshape","predict","data","predictions","classNames","getClassNames","Array","from","map","p","i","name","probability","toLabel","sort","a","b","slice","PredictionsListView","props","state","items","item","buildItem","ListGroup","Item","Math","round","Number","EPSILON","ProgressBar","striped","variant","now","buildList","React","Component","Disclaimer","Card","Header","Body","href","App","modelClassifier","isModelLoaded","imageSrc","showImagePreview","onFileChange","bind","init","setState","event","file","target","files","reader","FileReader","url","readAsDataURL","onloadend","readerEvent","result","document","getElementById","Container","style","marginTop","marginBottom","display","alignItems","Spinner","animation","marginLeft","Form","Group","controlId","className","Label","Control","type","onChange","Button","onClick","Row","Col","Image","id","src","rounded","width","height","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9d12bc08.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs';\n\nconst MODEL_CLASSES = [\n\t\"Atelectasis\",\n\t\"COVID-19\",\n\t\"Cardiomegaly\",\n\t\"Consolidation\",\n\t\"Edema\",\n\t\"Effusion\",\n\t\"Emphysema\",\n\t\"Infiltration\",\n\t\"Mass\",\n\t\"Nodule\",\n\t\"Pleural Thickening\",\n\t\"Pneumothorax\"\n];\n\nclass ModelClassifier {\n\t\n\tMODEL_CLASSES = [\n\t\t\"Atelectasis\",\n\t\t\"COVID-19\",\n\t\t\"Cardiomegaly\",\n\t\t\"Consolidation\",\n\t\t\"Edema\",\n\t\t\"Effusion\",\n\t\t\"Emphysema\",\n\t\t\"Infiltration\",\n\t\t\"Mass\",\n\t\t\"Nodule\",\n\t\t\"Pleural Thickening\",\n\t\t\"Pneumothorax\"\n\t];\n\n\tmodel = null;\n\n\tasync init() {\n\t\t// this.model = await tf.loadLayersModel('https://pneumonia-model.nyc3.digitaloceanspaces.com/model.json');\n\t\tthis.model = await tf.loadLayersModel('https://model.samuelfreitas.com.br/model.json');\n\t\tconsole.log(\"Model loaded.\");\n\t}\n\n\tasync predict(img) {\n\t\tconst grayscale = tf.browser\n\t\t\t.fromPixels(img)\n\t\t\t.resizeNearestNeighbor([224, 224])\n\t\t\t.mean(2)\n\t\t\t.toFloat()\n\t\t\t.expandDims(-1)\n\t\t\t.reshape([1, 224, 224, 1]);\n\t\t\n\t\t// Classify the image.\n\t\tconst predictions = await this.model.predict(grayscale).data();\n\t\t// const predictions = await this.model.predict(grayscale);\n\t\t// console.log('Predictions');\n\t\t// console.log(predictions);\n\t\t\n\t\tconst classNames = this.getClassNames(predictions);\n\t\t// classNames.forEach(item => console.log(item.toLabel));\n\n\t\treturn classNames;\n\t}\n\t\n\tgetClassNames(predictions) {\n\t\treturn Array.from(predictions)\n\t\t\t.map(function (p, i) {\n\t\t\t\treturn {\n\t\t\t\t\tname: MODEL_CLASSES[i],\n\t\t\t\t\tprobability: (p * 100),\n\t\t\t\t\ttoLabel: MODEL_CLASSES[i] + \": \" + (p * 100) + \"%\",\n\t\t\t\t}\n\t\t\t}).sort(function (a, b) {\n\t\t\t\treturn b.probability - a.probability;\n\t\t\t}).slice(0, 3);\n\t}\n}\n\nclass ModelPrediction {\n\tname = '';\n\tprobability = 0.0;\n\t\n\tconstructor(name, probability) {\n\t\tthis.name = name;\n\t\tthis.probability = probability;\n\t}\n\t\n\ttoString(){\n\t\treturn this.name + \": \" + this.probability + \"%\";\n\t}\n}\n\nexport {ModelClassifier, ModelPrediction, MODEL_CLASSES};","import React from \"react\";\n\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\nclass PredictionsListView extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpredictions: props.predictions,\n\t\t};\n\t}\n\n\tbuildList(items) {\n\t\treturn items.map((item) => this.buildItem(item));\n\t}\n\n\tbuildItem(item) {\n\t\tif (item.probability < 0.1 && item.probability > 0) {\n\t\t\titem.probability = 0.1;\n\t\t}\n\n\t\treturn (\n\t\t\t<ListGroup.Item key={item.name}>\n\t\t\t\t{item.name} - Probabilidade: { Math.round((item.probability + Number.EPSILON) * 100) / 100  } %\n\t\t\t\t<ProgressBar striped variant=\"success\" now={item.probability} />\n\t\t\t</ListGroup.Item>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<ListGroup>\n\t\t\t\t{this.buildList(this.state.predictions)}\n\t\t\t</ListGroup>\n\t\t);\n\t}\n}\n\nexport default PredictionsListView;","\nimport React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\n\nclass Disclaimer extends React.Component {\n\n    render() {\n        return (\n            <Card>\n                <Card.Header>Aviso!</Card.Header>\n                <Card.Body>\n                    <p>\n                        Esse sistema é apenas uma prova de conceito.\n                    </p>\n                    <p>\n                        Esse sistema foi feito com o objeto de auxiliar no diagnóstico de imagens de raio-x. \n                        Para esse diagnóstico, foi criado um modelo de inteligência artificial treinado para \n                        identificar as seguintes enfermidades: \n                    </p>\n                    <ul>\n                        <li>\n                            \"Atelectasia; um quadro clínico no qual a totalidade ou parte de um pulmão fica \n                            sem ar e entra em colapso. A obstrução dos brônquios é uma causa comum de \n                            atelectasia. Pode ocorrer falta de ar se os níveis de oxigênio estiverem \n                            baixos ou em casos de pneumonia.\"\n                            <a href=\"https://www.msdmanuals.com/pt-br/casa/dist%C3%BArbios-pulmonares-e-das-vias-respirat%C3%B3rias/bronquiectasias-e-atelectasia/atelectasia#:~:text=A%20atelectasia%20%C3%A9%20um%20quadro,ou%20em%20casos%20de%20pneumonia.\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"COVID-19; uma infecção respiratória aguda causada pelo coronavírus SARS-CoV-2, \n                            potencialmente grave, de elevada transmissibilidade e de distribuição global.\"\n                            <a href=\"https://www.gov.br/saude/pt-br/coronavirus/o-que-e-o-coronavirus#:~:text=A%20Covid%2D19%20%C3%A9%20uma,transmissibilidade%20e%20de%20distribui%C3%A7%C3%A3o%20global.\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Cardiomegalia; também conhecida como Coração grande e \n                            acomete pacientes que podem estar com outras doenças cardíacas, \n                            como insuficiência, doença das artérias coronárias, doença nas válvulas, \n                            arritmias e até mesmo Doença de Chagas.\"\n                            <a href=\"https://www.wecor.com.br/cardiomegalia#:~:text=Cardiomegalia%20%C3%A9%20tamb%C3%A9m%20conhecida%20como,at%C3%A9%20mesmo%20Doen%C3%A7a%20de%20Chagas.\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Consolidação pulmonar;  definida como a substituição do ar \n                            dos alvéolos por líquido, células ou a combinação destes dois. \n                            Nos exames radiológicos estas alterações se caracterizam por \n                            imagens opacas, causando apagamento dos vasos pulmonares, sem perda \n                            significativa de volume do segmento afetado.\"\n                            <a href=\"https://dapi.com.br/wp-content/uploads/2018/11/bases-radiologicas-das-doencas-toracicas.pdf\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Edema pulmonar; uma situação de emergência, quando há acúmulo de \n                            líquido dentro dos pulmões. Essa situação diminui as trocas de \n                            gasosas do pulmão, causando dificuldade de respiração e sensação \n                            de afogamento. A condição também é chamada de edema agudo do pulmão \n                            ou simplesmente “água no pulmão”.\"\n                            <a href=\"https://www.rededorsaoluiz.com.br/doencas/edema-pulmonar\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Efusão pleural: é a acumulação de líquido entre o pulmão e a parede torácica. \n                            A pleura é uma membrana fina que reveste o interior da parede torácica e \n                            cobre os pulmões. Normalmente existe uma pequena quantidade de fluido \n                            entre as duas camadas de pleura.\"\n                            <a href=\"https://drauziovarella.uol.com.br/doencas-e-sintomas/derrame-pleural-agua-na-pleura/#:~:text=Entre%20as%20duas%20pleuras%2C%20existe,visceral%20e%20a%20pleura%20parietal.\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Enfisema pulmonar; uma doença degenerativa, que geralmente se \n                            desenvolve depois de muitos anos de agressão aos tecidos do pulmão \n                            devido ao cigarro e outras toxinas no ar. \n                            Causa: Fumar cigarro é a causa principal\"\n                            <a href=\"https://www.saude.go.gov.br/biblioteca/7609-enfisema-pulmonar#:~:text=Descri%C3%A7%C3%A3o%3A%20O%20enfisema%20pulmonar%20%C3%A9,cigarro%20%C3%A9%20a%20causa%20principal.\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            Infiltration\n                        </li>\n                        <li>\n                            \"Câncer; doença em que as células anormais se dividem incontrolavelmente \n                            e destroem o tecido do corpo.\"\n                            <a href=\"https://www.inca.gov.br/o-que-e-cancer\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Nódulo pulmonar; um termo amplo que designa alterações radiológicas \n                            detectadas em exames de imagem do pulmão. Ele é uma lesão sólida \n                            ou em vidro fosco, normalmente arredondada e com menos de 3 \n                            centímetros de diâmetro. É importante buscar orientação médica \n                            diante do aparecimento de um desses nódulos.\"\n                            <a href=\"https://www.cdra.com.br/nodulo-no-pulmao#:~:text=N%C3%B3dulo%20pulmonar%20%C3%A9%20um%20termo,aparecimento%20de%20um%20desses%20n%C3%B3dulos.\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Espessamento pleural difuso; é uma doença da pleura visceral. \n                            Não é específico da exposição ao asbesto e pode aparecer como seqüela de uma \n                            reação inflamatória relacionada, por exemplo, com tuberculose, cirurgia torácica, \n                            hemotórax decorrente de traumas ou reação a drogas.\"\n                            <a href=\"https://www.msdmanuals.com/pt-br/casa/dist%C3%BArbios-pulmonares-e-das-vias-respirat%C3%B3rias/doen%C3%A7as-da-pleura-e-do-mediastino/derrame-pleural\">\n                                [REF]\n                            </a>\n                        </li>\n                        <li>\n                            \"Pneumotórax; é a presença de ar entre as duas camadas da pleura \n                            (membrana fina, transparente, de duas camadas que reveste os pulmões \n                            e o interior da parede torácica), resultando em colapso parcial \n                            ou total do pulmão. Os sintomas incluem dificuldade respiratória e dor torácica.\"\n                            <a href=\"https://www.msdmanuals.com/pt-br/casa/dist%C3%BArbios-pulmonares-e-das-vias-respirat%C3%B3rias/doen%C3%A7as-da-pleura-e-do-mediastino/pneumot%C3%B3rax#:~:text=Pneumot%C3%B3rax%20%C3%A9%20a%20presen%C3%A7a%20de,dificuldade%20respirat%C3%B3ria%20e%20dor%20tor%C3%A1cica.\">\n                                [REF]\n                            </a>\n                        </li>\n                    </ul>\n\n                    <p>\n                        O treinamento foi feito usando imagens diagnosticadas de bases de dados abertas na internet:\n                    </p>\n\n                    <ul>\n                        <li>https://github.com/ieee8023/covid-chestxray-dataset</li>\n                        <li>https://radiopaedia.org/?lang=us</li>\n                        <li>https://www.kaggle.com/paultimothymooney/chest-xray-pneumonia</li>\n                        <li>https://www.kaggle.com/c/rsna-pneumonia-detection-challenge/data</li>\n                        <li>https://github.com/ieee8023/covid-chestxray-dataset</li>\n                        <li>https://www.kaggle.com/neilturley/nihcc-chest-xray</li>\n                    </ul>\n\n                </Card.Body>\n            </Card>\n        );\n    }\n\n}\n\nexport default Disclaimer;","import \"./App.css\";\n\nimport React from \"react\";\n\nimport { Container, Card, Form, Spinner, Col, Row } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport Button from \"react-bootstrap/Button\";\n\nimport {ModelClassifier} from \"./ModelClassifier\";\nimport PredictionsListView from \"./PredictionsListView\";\nimport Disclaimer from \"./disclaimer/Disclaimer\";\n\nclass App extends React.Component {\n  \n\tmodelClassifier = new ModelClassifier();\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisModelLoaded: false,\n\t\t\timageSrc: \"\",\n\t\t\tshowImagePreview: false,\n\t\t\tpredictions: [],\n\t\t};\n\n\t\tthis.onFileChange = this.onFileChange.bind(this);\n\t\tthis.predict = this.predict.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.modelClassifier.init();\n\t\tthis.setState({isModelLoaded: true});\n\t}\n\n\tonFileChange(event) {\n\t\tvar file = event.target.files[0];\n\t\tvar reader = new FileReader();\n\t\tvar url = reader.readAsDataURL(file);\n\t\t\n\t\treader.onloadend = (readerEvent) => {\n\t\t\turl = readerEvent.target.result;\n\t\t\tthis.setState({\n\t\t\t\timageSrc: url,\n\t\t\t\tshowImagePreview: true\n\t\t\t});\n\t\t\t// console.log(url);\n\t\t};\n\t}\n\n\tasync predict() {\n\t\tconst img = document.getElementById('img-preview');\n\t\tconst predictions = await this.modelClassifier.predict(img);\n\t\tthis.setState({ predictions: predictions });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t<Container style={{marginTop: \"20px\"}} >\n\n\t\t\t<Disclaimer/>\n\n\t\t\t{!this.state.isModelLoaded && (\n\t\t\t<Card style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n\t\t\t\t<Card.Body style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n\t\t\t\t<Spinner animation=\"border\"></Spinner>\n\t\t\t\t<span style={{ marginLeft: \"10px\" }}>\n\t\t\t\t\tCarregando o sistema...\n\t\t\t\t</span>\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t\t)}\n\n\t\t\t<Card>\n\t\t\t\t<Card.Header>\n\t\t\t\t\t<strong>Analisador de Raio-X</strong>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<Form.Group controlId=\"formFile\" className=\"mb-3\">\n\t\t\t\t\t\t<Form.Label>Escolha uma imagem de Raio-X.</Form.Label>\n\t\t\t\t\t\t<Form.Control type=\"file\" onChange={this.onFileChange} />\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Button \n\t\t\t\t\t\tvariant=\"primary\" \n\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\tstyle={{marginBottom: \"20px\"}}\n\t\t\t\t\t\tonClick={this.predict}> Diagnosticar </Button>\n\n\t\t\t\t\t{this.state.showImagePreview && (\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\tid=\"img-preview\"\n\t\t\t\t\t\t\t\t\tsrc={this.state.imageSrc}\n\t\t\t\t\t\t\t\t\trounded\n\t\t\t\t\t\t\t\t\twidth=\"300\"\n\t\t\t\t\t\t\t\t\theight=\"300\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.predictions.length > 0 &&\n\t\t\t\t\t\t\t\t<PredictionsListView predictions={this.state.predictions} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t)}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}